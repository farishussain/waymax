:py:mod:`waymax.config`
=======================

.. py:module:: waymax.config

.. autoapi-nested-parse::

   Configs for Waymax Environments.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   waymax.config.CoordinateFrame
   waymax.config.DataFormat
   waymax.config.DatasetConfig
   waymax.config.ObservationConfig
   waymax.config.MetricsConfig
   waymax.config.LinearCombinationRewardConfig
   waymax.config.ObjectType
   waymax.config.SimAgentType
   waymax.config.SimAgentConfig
   waymax.config.EnvironmentConfig
   waymax.config.WaymaxConfig




Attributes
~~~~~~~~~~

.. autoapisummary::

   waymax.config.WOD_1_0_0_TRAINING
   waymax.config.WOD_1_0_0_VALIDATION
   waymax.config.WOD_1_1_0_TRAINING
   waymax.config.WOD_1_1_0_VALIDATION
   waymax.config.WOD_1_2_0_TEST


.. py:class:: CoordinateFrame(*args, **kwds)


   Bases: :py:obj:`enum.Enum`

   Coordinate system used for data.

   .. py:attribute:: SDC
      :value: 'SDC'

      

   .. py:attribute:: OBJECT
      :value: 'OBJECT'

      

   .. py:attribute:: GLOBAL
      :value: 'GLOBAL'

      


.. py:class:: DataFormat(*args, **kwds)


   Bases: :py:obj:`enum.Enum`

   Data format for serialized records.

   .. py:attribute:: TFRECORD
      :value: 'TFRECORD'

      


.. py:class:: DatasetConfig


   Configs for dataset/dataloader.

   .. attribute:: path

      Path/pattern for data, supporting sharded files with @.

   .. attribute:: data_format

      The format of data in `path`, string from
      womd_dataloader.DataFormat.

   .. attribute:: repeat

      Number of times to repeat the dataset. Set None to repeat
      infinitely.

   .. attribute:: batch_dims

      Batch dimensions in tuple format. Can be empty as ().

   .. attribute:: shuffle_seed

      Random seed. Set None to disable shuffle.

   .. attribute:: shuffle_buffer_size

      Buffer size for shuffling.

   .. attribute:: num_shards

      Number of shards for parallel loading, no effect on data
      returned.

   .. attribute:: deterministic

      Whether to use deterministic parallel processing.

   .. attribute:: include_sdc_paths

      Whether to include all valid future paths for SDC
      according to roadgraph connectivity from its starting position.

   .. attribute:: aggregate_timesteps

      Whether to aggregate keys from tf examples, need to set
      to True for parsing SimulatorState afterwards.

   .. attribute:: max_num_rg_points

      Max number of roadgraph points in data.

   .. attribute:: max_num_objects

      Max number of total objects in the scene. Set None to
      include all objects from the data.

   .. attribute:: num_paths

      Number of roadgraph traversal paths. Must be specified if
      include_sdc_paths is True.

   .. attribute:: num_points_per_path

      Number of points per roadgraph traversal path. Must be
      specified if include_sdc_paths is True.

   .. attribute:: drop_remainder

      Argument for tf.data.Dataset.batch. Set True to drop
      remainder if the last batch does not contain enough examples. Note
      training should not be affected since it is looping over all data for
      multiple epochs. For evaluation, it should be set to False to include all
      examples.

   .. attribute:: tf_data_service_address

      A string or a tuple indicating how to connect to
      the tf.data service. Used as the `service` argument for
      tf.data.experimental.service.distribute in dataloader.

   .. attribute:: distributed

      If True, the generated data batch will have an extra leading
      axis corresponding to the number of available devices. This is needed when
      the returned data is consumed by a pmap function.

   .. attribute:: batch_by_scenario

      If True, one example in a returned batch is the entire
      scenario containing all objects; if False, the dataset will treat
      individual object trajectories as a training example rather than an entire
      scenario.

   .. py:attribute:: path
      :type: str

      

   .. py:attribute:: data_format
      :type: DataFormat

      

   .. py:attribute:: repeat
      :type: Optional[int]

      

   .. py:attribute:: batch_dims
      :type: tuple[int, Ellipsis]
      :value: ()

      

   .. py:attribute:: shuffle_seed
      :type: Optional[int]

      

   .. py:attribute:: shuffle_buffer_size
      :type: int
      :value: 1000

      

   .. py:attribute:: num_shards
      :type: int
      :value: 4

      

   .. py:attribute:: deterministic
      :type: bool
      :value: True

      

   .. py:attribute:: include_sdc_paths
      :type: bool
      :value: False

      

   .. py:attribute:: aggregate_timesteps
      :type: bool
      :value: True

      

   .. py:attribute:: max_num_rg_points
      :type: int
      :value: 30000

      

   .. py:attribute:: max_num_objects
      :type: Optional[int]

      

   .. py:attribute:: num_paths
      :type: Optional[int]

      

   .. py:attribute:: num_points_per_path
      :type: Optional[int]

      

   .. py:attribute:: drop_remainder
      :type: bool
      :value: True

      

   .. py:attribute:: tf_data_service_address
      :type: Optional[str]

      

   .. py:attribute:: distributed
      :type: bool
      :value: False

      

   .. py:attribute:: batch_by_scenario
      :type: bool
      :value: True

      


.. py:class:: ObservationConfig


   Config for the built-in Waymax Observation function.

   .. attribute:: num_steps

      Number of trajectory history steps for observation.

   .. attribute:: roadgraph_top_k

      Number of closest roadgraph elements to get for
      observation.

   .. attribute:: coordinate_frame

      What coordinate frame the observation is using.

   .. py:attribute:: num_steps
      :type: int
      :value: 1

      

   .. py:attribute:: roadgraph_top_k
      :type: int
      :value: 2000

      

   .. py:attribute:: coordinate_frame
      :type: CoordinateFrame

      


.. py:class:: MetricsConfig


   Config for the built-in Waymax Metrics functions.

   .. attribute:: metrics_to_run

      A list of metric names to run. Available metrics are:
      log_divergence, overlap, offroad, sdc_wrongway, sdc_off_route,
      sdc_progression, kinematic_infeasibility. Additional custom metrics can be
      registered with `metric_factory.register_metric`.

   .. py:attribute:: metrics_to_run
      :type: tuple[str, Ellipsis]
      :value: ('log_divergence', 'overlap', 'offroad')

      


.. py:class:: LinearCombinationRewardConfig


   Config listing all metrics and their corresponding weights.

   .. attribute:: rewards

      Dictionary of metric names to floats indicating the weight of each
      metric to create a reward of a linear combination.

   .. py:attribute:: rewards
      :type: dict[str, float]

      


.. py:class:: ObjectType(*args, **kwds)


   Bases: :py:obj:`enum.Enum`

   Types of objects that can be controlled by Waymax.

   .. py:attribute:: SDC
      :value: 'SDC'

      

   .. py:attribute:: MODELED
      :value: 'MODELED'

      

   .. py:attribute:: VALID
      :value: 'VALID'

      

   .. py:attribute:: NON_SDC
      :value: 'NON_SDC'

      


.. py:class:: SimAgentType(*args, **kwds)


   Bases: :py:obj:`enum.Enum`

   Types of sim agents that can be used by Waymax.

   .. py:attribute:: IDM
      :value: 'IDM'

      


.. py:class:: SimAgentConfig


   Config for sim agents.

   .. attribute:: agent_type

      What sim agent algorithm to use.

   .. attribute:: controlled_objects

      Which objects the sim agent should control.

   .. py:attribute:: agent_type
      :type: SimAgentType

      

   .. py:attribute:: controlled_objects
      :type: ObjectType

      


.. py:class:: EnvironmentConfig


   Configs for Waymax Environments.

   .. attribute:: max_num_objects

      Max number of objects in the scene, should be consistent
      with DatasetConfig.max_num_objects.

   .. attribute:: init_steps

      Initial/warmup steps taken for the environment. For WOMD, this
      includes 10 warmup steps and 1 for the current step

   .. attribute:: controlled_object

      What type of objects are controlled.

   .. attribute:: compute_reward

      Whether to compute the reward. Computing the reward is
      expensive and unnecessary for cases like rollout data generation.

   .. attribute:: allow_new_objects_after_warmup

      Whether to allow new objects to appear after
      environment warmup. If this is set to `False`, all non-controlled objects
      that are invalid in the log at timestep `t=warmup` will be forever invalid
      in the simulation. This means that objects that appear out of occlusion
      after `t=warmup` will still be invalid as if they never appeared. If this
      is set to `True`, agents will be able to appear in the future simulated
      state if they appeared in the future logged state. Note when set to True,
      the environment could expect users to control objects even before their
      first appearance, users can either ignore or simply provide any invalid
      action for those objects.

   .. attribute:: observation

      Optional config for the provided observation function found at
      waymax/data/observation.py.

   .. attribute:: metrics

      Specifies which built-in Waymax metrics to run when calling
      `env.metrics(...)`.

   .. attribute:: rewards

      Specifies the metrics and weights to create a reward as a linear
      combination of metrics.

   .. attribute:: sim_agents

      Configurations for sim agents used to control non
      user-controlled objects. Sim agents are applied in the order of that they
      are specified (if multiple sim agents control the same object, only the
      last sim agent will be applied for that object).

   .. py:attribute:: max_num_objects
      :type: int
      :value: 128

      

   .. py:attribute:: init_steps
      :type: int
      :value: 11

      

   .. py:attribute:: controlled_object
      :type: ObjectType

      

   .. py:attribute:: compute_reward
      :type: bool
      :value: True

      

   .. py:attribute:: allow_new_objects_after_warmup
      :type: bool
      :value: True

      

   .. py:attribute:: observation
      :type: Optional[ObservationConfig]

      

   .. py:attribute:: metrics
      :type: MetricsConfig

      

   .. py:attribute:: rewards
      :type: LinearCombinationRewardConfig

      

   .. py:attribute:: sim_agents
      :type: Optional[Sequence[SimAgentConfig]]

      

   .. py:method:: __post_init__()



.. py:class:: WaymaxConfig


   Top level config for Waymax.

   .. attribute:: data_config

      Data related configurations, including how to parse and load
      the data.

   .. attribute:: env_config

      Configurations about the environment itself, observation, and
      metrics.

   .. py:attribute:: data_config
      :type: DatasetConfig

      

   .. py:attribute:: env_config
      :type: EnvironmentConfig

      

   .. py:method:: __post_init__()



.. py:data:: WOD_1_0_0_TRAINING

   

.. py:data:: WOD_1_0_0_VALIDATION

   

.. py:data:: WOD_1_1_0_TRAINING

   

.. py:data:: WOD_1_1_0_VALIDATION

   

.. py:data:: WOD_1_2_0_TEST

   

